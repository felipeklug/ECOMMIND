{
  "version": "1.0.0",
  "description": "ECOMMIND Directory Structure Conventions",
  "directories": [
    {
      "path": "src/app",
      "purpose": "Next.js App Router pages and layouts",
      "required": true,
      "allowedFileTypes": ["tsx", "ts"],
      "namingConvention": "kebab-case",
      "rules": [
        "Must use App Router pattern",
        "Server Components by default",
        "Client Components only when necessary"
      ]
    },
    {
      "path": "src/app/api",
      "purpose": "API routes with validation and security",
      "required": true,
      "allowedFileTypes": ["ts"],
      "namingConvention": "kebab-case",
      "rules": [
        "Must have route.ts files",
        "Must include Zod validation",
        "Must implement RLS",
        "Must have rate limiting"
      ]
    },
    {
      "path": "src/components/ui",
      "purpose": "Shadcn/ui base components",
      "required": true,
      "allowedFileTypes": ["tsx"],
      "namingConvention": "kebab-case",
      "rules": [
        "Generated by shadcn/ui CLI",
        "No manual modifications",
        "Use forwardRef pattern"
      ]
    },
    {
      "path": "src/features",
      "purpose": "Feature-based modules",
      "required": true,
      "allowedFileTypes": ["tsx", "ts"],
      "namingConvention": "kebab-case",
      "rules": [
        "Each feature is self-contained",
        "Must have components/, hooks/, types/ subdirs",
        "Can have services/ for business logic"
      ]
    },
    {
      "path": "src/core",
      "purpose": "Core business logic and services",
      "required": true,
      "allowedFileTypes": ["ts"],
      "namingConvention": "kebab-case",
      "rules": [
        "Pure TypeScript only",
        "No React components",
        "Shared business logic"
      ]
    },
    {
      "path": "src/lib",
      "purpose": "Utilities and helpers",
      "required": true,
      "allowedFileTypes": ["ts"],
      "namingConvention": "kebab-case",
      "rules": [
        "Pure functions preferred",
        "No side effects",
        "Well-typed utilities"
      ]
    },
    {
      "path": "src/hooks",
      "purpose": "Shared React hooks",
      "required": false,
      "allowedFileTypes": ["ts", "tsx"],
      "namingConvention": "use-kebab-case",
      "rules": [
        "Must start with 'use'",
        "Custom hooks only",
        "SWR patterns preferred"
      ]
    },
    {
      "path": "supabase/migrations",
      "purpose": "Database migrations",
      "required": true,
      "allowedFileTypes": ["sql"],
      "namingConvention": "YYYY_MM_DD_description.sql",
      "rules": [
        "Timestamped filenames",
        "Idempotent operations",
        "Include RLS policies"
      ]
    },
    {
      "path": "public",
      "purpose": "Static assets",
      "required": true,
      "allowedFileTypes": ["png", "jpg", "svg", "ico", "json"],
      "namingConvention": "kebab-case",
      "rules": [
        "Optimized images only",
        "SVG preferred for icons",
        "No sensitive data"
      ]
    }
  ],
  "forbidden": [
    {
      "path": "src/pages",
      "reason": "Use App Router instead of Pages Router"
    },
    {
      "path": "src/styles",
      "reason": "Use Tailwind CSS and CSS variables in globals.css"
    },
    {
      "path": "src/utils",
      "reason": "Use src/lib for utilities"
    },
    {
      "path": "src/helpers",
      "reason": "Use src/lib for helpers"
    }
  ],
  "fileNaming": {
    "components": "PascalCase.tsx",
    "pages": "kebab-case/page.tsx",
    "apis": "kebab-case/route.ts",
    "hooks": "use-kebab-case.ts",
    "types": "kebab-case.ts",
    "utils": "kebab-case.ts",
    "constants": "UPPER_SNAKE_CASE.ts"
  },
  "importRules": {
    "absolute": [
      "@/components/ui/*",
      "@/lib/*",
      "@/hooks/*",
      "@/features/*",
      "@/core/*"
    ],
    "relative": [
      "./local-file",
      "../sibling-dir"
    ],
    "forbidden": [
      "../../..",
      "../../../../"
    ]
  },
  "exportRules": {
    "components": "named export preferred",
    "pages": "default export required",
    "apis": "named exports (GET, POST, etc.)",
    "hooks": "named export",
    "types": "named export",
    "utils": "named export"
  }
}
